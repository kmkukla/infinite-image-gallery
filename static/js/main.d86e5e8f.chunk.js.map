{"version":3,"sources":["App.js","index.js"],"names":["accessKey","process","App","useState","images","setImages","page","setPage","query","setQuery","getPhotos","useCallback","apiUrl","fetch","then","res","json","data","imagesFromApi","results","useEffect","className","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","dataLength","length","next","hasMore","loader","endMessage","style","textAlign","map","image","index","href","links","html","rel","src","urls","regular","alt","alt_description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAIMA,EAAYC,8CAwFHC,EAtFH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAYC,uBAAY,WAC5B,IAAIC,EAAM,mCACNJ,IAAOI,EAAM,uDAAmDJ,IAEpEI,GAAM,gBAAaN,GACnBM,GAAM,qBAAkBZ,GAExBa,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAU,IAAD,EACRC,EAAa,UAAGD,EAAKE,eAAR,QAAmBF,EACzB,IAATX,GAAYD,EAAUa,GAC1Bb,GAAU,SAACD,GAAD,4BAAgBA,GAAhB,YAA2Bc,YAExC,CAACZ,EAAME,IAEVY,qBAAU,WACRV,MACC,CAACJ,EAAMI,IAkBV,OACE,sBAAKW,UAAU,MAAf,UACE,wDAEA,uBAAMC,SApBW,SAACC,GACpBA,EAAEC,iBACFjB,EAAQ,GACRG,KAiBE,UACE,uBACEe,MAAOjB,EACPkB,SAAU,SAACH,GAAD,OAAOd,EAASc,EAAEI,OAAOF,QACnCG,KAAK,OACLC,YAAY,uBAEd,+CAGF,cAAC,IAAD,CACEC,WAAY1B,EAAO2B,OACnBC,KAAM,WACJzB,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAE3B2B,SAAS,EACTC,OAAQ,4CACRC,WACE,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,SACE,4DATN,SAaE,qBAAKhB,UAAU,aAAf,SACGjB,EAAOkC,KAAI,SAACC,EAAOC,GAAR,OACV,mBACEnB,UAAU,QAEVoB,KAAMF,EAAMG,MAAMC,KAClBhB,OAAO,SACPiB,IAAI,sBALN,SAOE,qBAAKC,IAAKN,EAAMO,KAAKC,QAASC,IAAKT,EAAMU,mBALpCT,cC1EnBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d86e5e8f.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport './App.css';\n\nconst accessKey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY;\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState('');\n\n  const getPhotos = useCallback(() => {\n    let apiUrl = `https://api.unsplash.com/photos?`;\n    if (query) apiUrl = `https://api.unsplash.com/search/photos?query=${query}`;\n\n    apiUrl += `&page=${page}`;\n    apiUrl += `&client_id=${accessKey}`;\n\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        const imagesFromApi = data.results ?? data;\n        if (page === 1) setImages(imagesFromApi);\n        setImages((images) => [...images, ...imagesFromApi]);\n      });\n  }, [page, query]);\n\n  useEffect(() => {\n    getPhotos();\n  }, [page, getPhotos]);\n\n  const searchPhotos = (e) => {\n    e.preventDefault();\n    setPage(1);\n    getPhotos();\n  };\n\n  // return an error if there is no access key\n\n  if (!accessKey) {\n    return (\n      <a href=\"https://unsplash.com/developers\" className=\"error\">\n        Required: Get you unsplash api key first\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Unsplash Image Gallery</h1>\n\n      <form onSubmit={searchPhotos}>\n        <input\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          type=\"text\"\n          placeholder=\"Search Unsplash...\"\n        />\n        <button>Search</button>\n      </form>\n\n      <InfiniteScroll\n        dataLength={images.length}\n        next={() => {\n          setPage((page) => page + 1);\n        }}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: 'center' }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        <div className=\"image-grid\">\n          {images.map((image, index) => (\n            <a\n              className=\"image\"\n              key={index}\n              href={image.links.html}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img src={image.urls.regular} alt={image.alt_description} />\n            </a>\n          ))}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}